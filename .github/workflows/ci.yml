name: Python CI/CD
on:
  push:
    branches: [feature-logging]
  pull_request:
    branches: [feature-logging]
jobs:
  build-and-deploy:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          pip install flake8 pytest flask
      
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exit-zero
          flake8 . --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
      - name: Run tests
        run: pytest || true
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/python-app:latest
      
      - name: Deploy Docker container
        env:
          DOCKER_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/python-app:latest
        run: |
          # Pull the latest image
          docker pull $DOCKER_IMAGE
          
          # Stop and remove existing container if it exists
          docker stop python-app || true
          docker rm python-app || true
          
          # Run the container with restart policy
          docker run -d --name python-app --restart=always -p 5000:5000 $DOCKER_IMAGE
          
          # Verify container is running
          docker ps | grep python-app
          
          # Wait for application to start
          sleep 5
          
          # Health check - make sure application is responding
          curl -s http://localhost:5000 || echo 'WARNING: Application health check failed'